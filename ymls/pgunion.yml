#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Author(s):  Admin9705 - Deiteq
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: include PGClone aliases
      include_tasks: '/opt/pgclone/ymls/alias.yml'

    - debug: msg="PGBlitz Type - {{transport}}"
    - debug: msg="HD Path - {{hdpath}}"

    - name: 'If Fact Matches - Encrypted Blitz'
      set_fact:
        path: 'remotes = gdrive: tdrive: gcrypt: tcrypt: {{hdpath}}/move'
      when: transport == "be"

    - name: 'If Fact Matches - Encrypted Move'
      set_fact:
        path: 'remotes = gdrive: gcrypt: {{hdpath}}/move'
      when: transport == "me"

    - name: 'If Fact Matches - UnEncrypted Blitz'
      set_fact:
        path: 'remotes = gdrive: tdrive: {{hdpath}}/move'
      when: transport == "bu"

    - name: 'If Fact Matches - UnEncrypted Move'
      set_fact:
        path: 'remotes = gdrive: {{hdpath}}/move'
      when: transport == "mu"

    - name: Creating required paths
      file: 'path={{hdpath}}/{{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true'
      with_items:
        - 'move'
        - 'downloads'
        - 'incomplete'

    - name: 'Setting ownership on logs'
      shell: 'chown -R 1000:1000 /var/plexguide/logs'

    - name: 'Setting ownership'
      shell: 'chown -R 1000:1000 {{hdpath}}/{{item}}'
      with_items:
        - 'move'
        - 'downloads'
        - 'incomplete'

    - name: 'Setting permissions'
      shell: 'chmod -R 775 {{hdpath}}/{{item}}'
      with_items:
        - 'move'
        - 'downloads'
        - 'incomplete'

    - name: Transport Type
      shell: 'echo "" >> /opt/appdata/plexguide/rclone.conf'

    - name: Line Rmur
      shell: 'sed -i -e "/\[(unionfs|pgunion)\]/,+2d" /opt/appdata/plexguide/rclone.conf'

    - name: Transport Type
      shell: |
        echo "[pgunion]" >> /opt/appdata/plexguide/rclone.conf
        echo "type = union" >> /opt/appdata/plexguide/rclone.conf
        echo "{{path}}" >> /opt/appdata/plexguide/rclone.conf

    - name: 'PG Blitz Execution'
      block:
        - name: Bandwidth Limit
          shell: 'cat /var/plexguide/blitz.bw'
          register: bandwidth

        - name: Install PG Blitz Script
          template:
            src: /opt/pgclone/scripts/pgblitz.sh
            dest: /opt/appdata/plexguide/pgblitz.sh
            force: yes

        - name: Install PG Blitz Service
          template:
            src: /opt/pgclone/mounts/pgblitz.service
            dest: /etc/systemd/system/pgblitz.service
            force: yes

        - name: Reload PG Blitz Service
          systemd:
            daemon_reload: yes
            enabled: yes
            state: reloaded
            name: pgblitz

      when: (transport == "be") or
        (transport == "bu")

    - name: 'PG Move Execution'
      block:
        - name: Bandwidth Limit
          shell: 'cat /var/plexguide/move.bw'
          register: bandwidth

        - name: Deploy Version
          shell: 'cat /var/plexguide/rclone/deploy.version'
          register: ver

        - name: Register HD Path
          shell: 'cat /var/plexguide/server.hd.path'
          register: hdpath

        - name: Install MOVE Script
          template:
            src: /opt/pgclone/scripts/pgmove.sh
            dest: /opt/appdata/plexguide/pgmove.sh
            force: yes

        - name: Install MOVE Service
          template:
            src: /opt/pgclone/mounts/pgmove.service
            dest: /etc/systemd/system/pgmove.service
            force: yes

        - name: Reload MOVE Service
          systemd:
            daemon_reload: yes
            enabled: yes
            state: reloaded
            name: pgmove

      when: (transport == "me") or
        (transport == "mu")

    - name: Install PGUnion Script
      template:
        src: /opt/pgclone/scripts/pgunion.sh
        dest: /opt/appdata/plexguide/pgunion.sh
        force: yes

    - name: Install PGUnion Service
      template:
        src: /opt/pgclone/mounts/pgunion.service
        dest: /etc/systemd/system/pgunion.service
        force: yes

    - name: Reload PGUnion Service
      systemd:
        daemon_reload: yes
        enabled: yes
        state: reloaded
        name: pgunion

    - name: 'Waiting for PGUnion to initialize'
      wait_for:
        path: /mnt/unionfs/plexguide
        timeout: 15
        delay: 2

    - name: Register HD Path
      shell: 'cat /var/plexguide/server.hd.path'
      register: hdpath

    - name: Restart All Docker Containers
      shell: docker restart $(docker ps -a -q)
